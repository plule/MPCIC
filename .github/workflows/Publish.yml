name: Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
  build:
    name: Publish for ${{ matrix.runtime }}
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        include:
          - runtime: ubuntu.16.10-x64
            folder_name: MPCIC-ubuntu
            zip_name: MPCIC-ubuntu.zip
          - runtime: win10-x64
            folder_name: MPCIC-windows
            zip_name: MPCIC-windows.zip
          - runtime: osx-x64
            folder_name: MPCIC-osx
            zip_name: MPCIC-osx.zip

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.3
      - name: Build
        run: dotnet publish --configuration Release --runtime ${{ matrix.runtime }}
      - name: Zip
        run: mv MPCIC.Cli/bin/Release/net5.0/${{ matrix.runtime }}/publish/ ${{ matrix.folder_name }} && zip ${{ matrix.zip_name }} ${{ matrix.folder_name }}/*
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.zip_name }}
          asset_name: ${{ matrix.zip_name }}
          asset_content_type: application/zip
